@mixin flex-grid(
  $queries: (col: 0, tablet: 480px, desktop: 720px, desktop-lg: 960px),
  $columns: 12,
  $gutters: (
    default: 1rem,
    xs: .5rem,
    sm: .75rem,
    md: 1.5rem,
    lg: 3rem,
    xl: 5rem
  )) {
  $widths: ();

  @for $i from 1 through $columns {
    @for $j from 1 through $i {
      $per: percentage($j/$i);
      $list: map-values($widths);
      @if index($list, $per) == null {
        $widths: map-merge($widths, ( #{$j}-#{$i}: $per));
      }
    }
  }

  @each $device, $query in $queries {
    @media screen and (min-width: #{$query}) {
      [class*='#{$device}-'] {
        width: 100%;
      }
    }

    @each $name, $value in $widths {
      .#{$device}-#{$name} {
        @media screen and (min-width: #{$query}) {
          max-width: $value;
          width: $value;
        }
      }
    }
  }

  @at-root .flex {
    display: flex;

    &.reverse {
      flex-direction: row-reverse;
    }

    &.space-between {
      justify-content: space-between;
    }

    > * {
      margin-top: 0;
    }

    .justify-{
      &-center {
        justify-content: center;
      }

      &-end {
        justify-content: flex-end;
      }
    }

    > .flex-fill {
      flex: 1;
    }

    > .flex-end {
      margin-left: auto !important;
    }

    > .flex-center {
      margin-left: auto !important;
      margin-right: auto !important;
    }

    &--column {
      display: flex;
      flex-direction: column;

      > .flex-bottom {
        padding-top: 1rem;
        margin-top: auto !important;
      }

      > .flex-fill {
        flex: 1;
        -ms-flex: 1 0 auto;
      }

      &.reverse {
        flex-direction: column-reverse;
      }

      > .flex-center {
        margin-top: auto !important;
        margin-bottom: auto !important;
      }
    }

    &--grid {
      @extend .flex;
      flex-wrap: nowrap;
      justify-content: flex-start;

      @each $name, $value in $gutters {
        @if ($name == default) {
          margin-left: -$value;

          > * {
            margin-top: 0;
            padding-left: $value;
          }

          &.with-rows > * {
            margin-bottom: $value;
          }

        } @else {

          &.gutter--#{$name} {
            margin-left: -$value;

            > * {
              padding-left: $value;
            }

            &.with-rows > * {
              margin-bottom: $value;
            }
          }
        }
      }
    }
  }
  .grid {
    @extend .flex--grid;
    flex-wrap: wrap;
  }
}
